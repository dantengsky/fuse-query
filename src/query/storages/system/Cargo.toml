[package]
name = "common-storages-system"
version = { workspace = true }
authors = { workspace = true }
license = { workspace = true }
publish = { workspace = true }
edition = { workspace = true }

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[lib]
doctest = false
test = false

[dependencies]
common-ast = { path = "../../ast" }
common-base = { path = "../../../common/base" }
common-catalog = { path = "../../catalog" }
common-cloud-control = { path = "../../../common/cloud_control" }
common-config = { path = "../../config" }
common-exception = { path = "../../../common/exception" }
common-expression = { path = "../../expression" }
common-functions = { path = "../../functions" }
common-meta-api = { path = "../../../meta/api" }
common-meta-app = { path = "../../../meta/app" }
common-metrics = { path = "../../../common/metrics" }
common-pipeline-core = { path = "../../pipeline/core" }
common-pipeline-sources = { path = "../../pipeline/sources" }
common-profile = { path = "../../profile" }
common-sql = { path = "../../sql" }
common-storage = { path = "../../../common/storage" }
common-storages-fuse = { path = "../fuse" }
common-storages-result-cache = { path = "../result_cache" }
common-storages-view = { path = "../view" }
common-users = { path = "../../users" }
jsonb = { workspace = true }
storages-common-cache = { path = "../common/cache" }
storages-common-cache-manager = { path = "../common/cache_manager" }

async-backtrace = { workspace = true }
async-trait = { version = "0.1.57", package = "async-trait-fn" }
chrono = { workspace = true }
futures = { workspace = true }
itertools = "0.10.5"
log = { workspace = true }
once_cell = { workspace = true }
opendal = { workspace = true }
parking_lot = "0.12.1"
regex = "1.8.1"
serde = { workspace = true }
serde_json = { workspace = true }
serde_repr = "0.1.9"
snailquote = "0.3.1"
tikv-jemalloc-ctl = { workspace = true }

typetag = "0.2.3"
walkdir = "2.3.2"

[build-dependencies]
common-building = { path = "../../../common/building" }
